//공지사항 게시글 작성
//fileUpTransfer -> invisibleObject
this.writeNotice_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	this.Div00.form.edt_writer.set_value("관리자");
	this.Div00.form.edt_writer.set_textAlign("center");
	var d = new Date();
	var today = (d.getYear() + "" + ((d.getMonth()+1)+"").padLeft(2,'0')+""+(""+d.getDate()).padLeft(2,'0'));
	this.Div00.form.edt_writeDate.set_value(today);
	this.Div00.form.edt_writeDate.set_textAlign("center");
};

this.Button00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.FileDialog00.open('nexacro17', FileDialog.MULTILOAD);
};


this.FileDialog00_onclose = function(obj:nexacro.FileDialog,e:nexacro.FileDialogEventInfo)
{
	this.addFileList(e.virtualfiles);
};
// 파일을 추가하는 방법이 파일 선택 대화상자와 드래그앤드롭 두 가지로 나누어져서 추가한 파일을 처리하는 부분을 addFileList라는function으로 분리했습니다.
this.addFileList = function(filelist)
{
	for(var i = 0, len = filelist.length, vFile; i<len; i++)
	{
		vFile = filelist[i];
		vFile.addEventHandler("onsuccess", this.FileList_onsuccess, this);
		vFile.addEventHandler("onerror", this.FileList_onerror, this);
		
		vFile.open(null, 1);
	}	
}
//Grid영역 내로 드래그 상태의 마우스 포인터가 들어왔을 때 발생하는 이벤트
//사용자가 윈도우 탐색에서 파일을 선택하고 드래그해서 그리드 컴포넌트 영역에 들어왔을 때 투명도 속성을 조정해서 뒤에 있는 static이 보여지게 함
//Grid영역 밖으로 나가거나 드롭 동작이 처리되면 투명도를 원래 상태로 돌려놓는다.
this.Div00_Grid00_ondragenter = function(obj:nexacro.Grid,e:nexacro.DragEventInfo)
{
	if(e.datatype == "file")
	{
		this.Div00.form.Grid00.set_opacity(0.5);
	}
};


this.Div00_Grid00_ondragleave = function(obj:nexacro.Grid,e:nexacro.DragEventInfo)
{
	this.Div00.form.Grid00.set_opacity(1);
};

this.Div00_Grid00_ondrop = function(obj:nexacro.Grid,e:nexacro.GridDragEventInfo)
{
	this.Div00.form.Grid00.set_opacity(1);
	if(e.datatype == "file")
	{
		this.addFileList(e.fileList);
	}
};

this.FileList_onsuccess = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileEventInfo)
{
	switch(e.reason)
	{
		case 1 : 
		obj.getFileSize();
		break;
		
		case 9 : 
		var nRowIdx = this.ds_data.addRow();
		this.ds_data.setColumn(nRowIdx, 0, obj.filename);
		this.ds_data.setColumn(nRowIdx, 1, this.cutFileSize(e.Filesize));
		this.FileUpTransfer00.addFile(obj.filename, obj);
		break;
	}
}

this.FileList_onerror = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileErrorEventInfo)
{
	trace("errortype: "+e.errortype);
	trace("errormsg : "+e.errormsg);
	trace("statuscode "+e.statuscode);
}

this.cutFileSize = function(filesize)
{
	var sOutput = filesize + "bytes";
	for (var aMultiples = ["KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"], nMultiple = 0, nApporx = filesize / 1024; nApprox > 1; nApprox /= 1024, nMultiple++)
	{
		sOutput = nApprox.toFixed(3) + " " + aMultiples[nMultiple];
	}
	return sOutput;
}
//글쓰기 버튼을 upload버튼으로 대체
this.Button01_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var title = this.Div00.form.edt_title.value;
	var content = this.Div00.form.edt_content.value;
 	var nRow = this.ds_data.rowposition;
 	var name = this.ds_data.getColumn(nRow, "name");
	var size = this.ds_data.getColumn(nRow, "size");
	this.alert(name+"::"+size);
	
	//this.FileUpTransfer00.upload("");
	//이부분을 이클립스 파일 저장경로로 보내면 될거같은뎅
};


//파일이 업로드 중일 때 일정간겨으로 발생하는 이벤트입니다.
this.FileUpTransfer00_onprogress = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferProgressEventInfo)
{
	this.fn_addlog(e.loaded+"/"+e.total);
};
//파일이 업로드가 완료된 후 성공코드 값이 전달 되었을 때 발생하는 이벤트입니다
this.FileUpTransfer00_onsuccess = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferEventInfo)
{
	this.fn_addlog(e.code);
	this.fn_addlog(e.message);
};
//파일 업로드에 실패하거나 에러코드가 반환 되었을 때 발생하는 이벤트입니다.
this.FileUpTransfer00_onerror = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferErrorEventInfo)
{
	this.fn_addlog(e.errormsg);
	this.fn_addlog(e.statuscode);
};

this.fn_addlog = function(strMessage)
{
	
}