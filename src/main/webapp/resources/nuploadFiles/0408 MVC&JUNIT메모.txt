Targeted Runtime -> servlet관련 서버연결
Java Build Path
Project Facets 버전 확인
Maven Dependencies

dependency 추가

SpringTest - jUnit4

mappers폴더만들고 photo-mapper.xml작성후 namespace와 id를 작성해줘야 storeLogic에서 쓸 수 있다.
mapper의 위치를 알 수 있게 해주는 mybatis-config.xml

다시 정리
pom.xml ->dependency추가
pakcage생성 MVC패턴 중 Model부분 domain, store, service
package내에 interface, class생성

비즈니스 로직 : 코드작성

mybatis-config.xml작성 후 태그 작성
mappers폴더생성 후 아래 mapper.xml 작성

root-context.xml에 접속정보관련 빈 등록

jUnit은 이미 4.7이 pom.xml에 추가돼있음

spring testcontext freamwork 버전은 사용하는 버전에 맞게 골라서 dependency추가해주면됨

jUnit을 사용하기 위한 사전 셋팅
어노테이션으로 진행
@RunWith(SpringJUnit4ClassRunner.class)
rootContext.xml에 작성한 접속정보를 알아오기위해 
@ContextConfiguration(locations= {"file:src/main/webapp/WEB-INF/spring/root-context.xml"}) 작성
Test할 메서드 작성후 어노테이션 @Test

jUnit을 사용하는 이유는 화면단 없이 백단 설정 및 디비와의 연결, 그리고
쿼리문을 제대로 작성을 했는지를 확인할 수 있는 것이다. 

java.lang.AssertionError : expected:<1> but was: <0> 이건 쿼리문을 실행한 결과 1이 나와야하는데
쿼리문에 맞지않는데이터를 찾아서 0이 나오다 보니 다음과 같은 오류 발생

, #{noticeFileName}
, #{noticeFileReName}

NOTICE_TBL에 저 두개의 컬럼이 추가가 됐어야했는데 그걸 추가 안하고
저 두 값을 넣으려고 하니 TOO MANY VALUES가 나올 수 밖에 없는 거고
저 두 개를 배제하면 JUNIT TEST는 성공