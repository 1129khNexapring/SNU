<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="writeNotice" width="600" height="500" titletext="New Form" onload="writeNotice_onload">
    <Layouts>
      <Layout height="500" mobileorientation="landscape" width="600">
        <Static id="Static00" taborder="0" text="작성자" left="37" top="16" width="85" height="35" border="1px solid gray, 0px solid gray, 0px solid gray, 1px solid gray" textAlign="center"/>
        <Edit id="Edit00" taborder="3" left="122" top="16" width="181" height="35" border="1px solid gray, 0px solid gray, 1px solid gray, 1px solid gray"/>
        <Static id="Static00_00" taborder="1" text="제목" left="37" top="48" width="85" height="35" border="1px solid gray, 0px solid gray, 0px solid gray, 1px solid gray" textAlign="center"/>
        <Static id="Static00_01" taborder="2" text="내용" left="37" top="83" width="85" height="213" border="1px solid gray, 0px solid gray, 1px solid gray, 1px solid gray" textAlign="center"/>
        <Static id="Static00_02" taborder="4" text="작성날짜" left="303" top="16" width="85" height="35" border="1px solid gray" textAlign="center"/>
        <Edit id="Edit00_00" taborder="5" left="388" top="16" width="161" height="35" border="1px solid gray, 1px solid gray, 1px solid gray, 0px solid gray"/>
        <Edit id="Edit00_01" taborder="6" left="122" top="48" width="427" height="35" border="1px solid gray"/>
        <TextArea id="TextArea00" taborder="7" left="122" top="83" width="427" height="213" border="0px solid gray, 1px solid gray, 1px solid gray"/>
        <Grid id="Grid00" taborder="8" left="37" top="296" width="512" height="90" binddataset="dsFileList" autofittype="col" onexpandup="Grid00_onexpandup">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="156"/>
                <Column size="80"/>
                <Column size="48"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="fileName"/>
                <Cell col="1" text="fileSize"/>
                <Cell col="2"/>
              </Band>
              <Band id="body">
                <Cell text="bind:fileName"/>
                <Cell col="1" text="bind:fileSize"/>
                <Cell col="2" expandimage="url('theme://images/btn_TF_Close_O.png')" expandshow="show" expandsize="46"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="Button00" taborder="9" text="파일추가" left="361" top="385" width="50" height="23" onclick="Button00_onclick"/>
        <Button id="Button01" taborder="10" text="초기화" left="311" top="386" width="50" height="22" onclick="Button01_onclick"/>
        <TextArea id="TextArea01" taborder="11" left="37" top="386" width="213" height="45" visible="false"/>
        <Button id="Button02" taborder="12" text="파일전송" left="250" top="386" width="61" height="22" onclick="Button02_onclick"/>
        <Button id="btn_write" taborder="13" text="등록" left="475" top="386" width="75" height="27" onclick="btn_write_onclick"/>
      </Layout>
    </Layouts>
    <Objects>
      <FileDialog id="FileDialog00" onclose="FileDialog00_onclose"/>
      <FileUpTransfer id="FileUpTransfer00" onsuccess="FileUpTransfer00_onsuccess" onprogress="FileUpTransfer00_onprogress" onerror="FileUpTransfer00_onerror"/>
      <Dataset id="dsFileList">
        <ColumnInfo>
          <Column id="fileName" type="STRING" size="256"/>
          <Column id="fileSize" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
    <Script type="xscript5.1"><![CDATA[this.sFileUrl = nexacro.getEnvironment().services["SnuURL"].url+"/uploadFiles.snu"; //http://127.0.0.1:7776
this.nMaxFileSize = 2000000; // 각 파일 최대 사이즈(2 Mbyte)
//폼이 로드 됐을 때, 작성자와 작성날짜 기본셋팅
this.writeNotice_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	this.Edit00.set_value("관리자");
	this.Edit00.set_textAlign("center");
	var d = new Date();
	var today = (d.getYear() + "" + ((d.getMonth()+1)+"").padLeft(2,'0')+""+(""+d.getDate()).padLeft(2,'0'));
	this.Edit00_00.set_value(today);
	this.Edit00_00.set_textAlign("center");
	//파일업로드시 파일저장 폴더경로 postData셋팅
	this.FileUpTransfer00.setPostData("filePath", "nuploadFiles");
	//파일 업로드 전송 url셋팅
	this.FileUpTransfer00.set_url(this.sFileUrl);
};
//파일추가 버튼 클릭
this.Button00_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.FileDialog00.open("파일선택", FileDialog.LOAD);
};
//파일선택장(FileDialog)닫힐시
//Web은 e.reason = 1 || e.reason = 3경우에만 발생
this.FileDialog00_onclose = function(obj:nexacro.FileDialog,e:nexacro.FileDialogEventInfo)
{
	if(e.reason == 0) {//파일선택 취소
		return;
		}else {
			if(e.reason == 1) 
			{	//FileDialog.LOAD옵션의 파일선택
				var vFile = e.virtualfiles[0];
				var isExist = this.FileUpTransfer00.existFile(vFile);
				
				//파일 중복 체크
				if(isExist) 
				{
					alert("이미 추가된 파일이 있습니다");
					return;
				}
				//VirtualFile이벤트 생성
				vFile.addEventHandler("onsuccess", this.Upload_VirtualFile_onsuccess, this);
				vFile.addEventHandler("onerrror", this.Upload_VirtualFile_onerror, this);
				
				//File사이즈 체크를 위해
				vFile.open(null,VirtualFile.openRead);
			}
		}
};
//업로드용 Virtual 파일 onsuccess이벤트
this.Upload_VirtualFile_onsuccess = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileEventInfo)
{
	if (e.reason == 1) //open() callback
	{
		//파일사이즈체크
		obj.getFileSize();
	}
	if(e.reason == 9) //getFileSize()callback
	{
		obj.close();
		var sFileName = obj.filename;
		var nFileSize = e.filesize;
		
		if(nFileSize > this.nMaxFileSize)
		{
			alert("첨부파일 최대용량은 2 MByte입니다.");
			return;
		}
		//FileupTransfer해당 파일추가
		var nIdx = this.FileUpTransfer00.addFile(sFileName,obj);
		//화면 파일정보 셋팅
		var nRow = this.dsFileList.insertRow(nIdx);
		this.dsFileList.setColumn(nRow, "fileName", sFileName);
		this.dsFileList.setColumn(nRow, "fileSize", nFileSize);
	}
}
//업로드용 virtual 파일 onerror이벤트
this.Upload_VirtualFile_onerror = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileErrorEventInfo)
{
	var msg = ">>>>>>> VirtualFile event Error >>>>\n";
	msg +="errortype : "+e.errortype+"\n";
	msg +="errormsg  : "+e.errormsg+"\n";
	msg +="statuscode: "+e.statuscode+"\n";
	
	alert(msg);


}
// 그리드 삭제이미지 클릭시
this.Grid00_onexpandup = function(obj:nexacro.Grid,e:nexacro.GridMouseEventInfo)
{
	var nRow = e.row;
	//FileUpTransfer 해당 파일 삭제
	var nIdx = this.FileUpTransfer00.removeFileByIndex(nRow);
	//정상 삭제 시 해당 데이터 삭제
	if(nIdx > -1) 
	{
		obj.getBindDataset().deleteRow(nRow);
	}
	trace("파일 갯수:"+this.FileUpTransfer00.filelist.length);
};
//초기화 버튼 클릭시
this.Button01_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//파일정보 초기화
	this.fn_FileClear();
};
//파일 전송 성공 시 
this.FileUpTransfer00_onsuccess = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferEventInfo)
{
	var msg = ">>>>>>>>>> SUCCESS >>>>>>>>\n";
	msg +="code :"+e.code+"\n";
	msg +="message:"+e.message+"\n";
	msg +="url :"+e.url+"\n";
	msg +="datasets[0].saveXML() : "+e.datasets[0].saveXML()+"\n";
	
	this.TextArea01.set_value(msg);
	//파일정보 초기화
	this.fn_FileClear();
};

this.FileUpTransfer00_onprogress = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferProgressEventInfo)
{
	trace(e.loaded +" / "+e.total + " Byte Uploading....");
};

this.FileUpTransfer00_onerror = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferErrorEventInfo)
{
	var msg = ">>>>>>ERROR >>>>>\n";
	msg += "statuscode:"+e.statuscode+"\n";
	msg += "requesturi:"+e.requesturi+"\n";
	msg += "locationuri:"+e.locationuri+"\n";
	msg += "errormsg:"+e.errormsg+"\n";
	
	this.TextArea01.set_value(msg);
};

this.Button02_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	if(this.FileUpTransfer00.filelist.length == 0)
	{
		alert("첨부한 파일이 없습니다.");
		return;
	}
	//파일 전송
	this.FileUpTransfer00.upload();
};

//파일정보 초기화
this.fn_FileClear = function()
{
	//FileupTransfer파일모두 삭제
	this.FileUpTransfer00.clearFileList();
	//파일정보 모두 삭제
	this.dsFileList.clearData();
}


this.btn_write_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var title = this.Edit00_01.value;
	var content = this.TextArea00.value;
	var dRow = this.dsFileList.rowposition;
	var name = this.dsFileList.getColumn(dRow, "fileName");
	this.transaction(
	"tr_noticeRegister"
	,"SnuURL::noticeNexa/register.snu"
	,""
	,""
	,"title="+nexacro.wrapQuote(title)+" content="+nexacro.wrapQuote(content)+" name="+name+""
	,"fn_callback_notice"
	)
};

this.fn_callback_notice = function(sId, nErrorCode, sErrorMsg)
{
	if(sId == "tr_noticeRegister")
	{
		if(nErrorCode > 0)
		{
			this.alert(sErrorMsg);
		}
		this.alert(sErrorMsg);
	}
}
]]></Script>
  </Form>
</FDL>
